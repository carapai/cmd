import dotenv from "dotenv";
import axios from "axios";
import _ from "lodash";

dotenv.config();
interface DHIS2Config {
    baseUrl: string;
    username: string;
    password: string;
}

const dhis2Config: DHIS2Config = {
    baseUrl: process.env.DHIS2_BASE_URL || "",
    username: process.env.DHIS2_USERNAME || "",
    password: process.env.DHIS2_PASSWORD || "",
};

const api = axios.create({
    baseURL: dhis2Config.baseUrl,
    auth: {
        username: dhis2Config.username,
        password: dhis2Config.password,
    },
});
const toDelete = [
    "705",
    "SRT-SRT23-0288",
    "456",
    "285",
    "269",
    "268",
    "248",
    "/",
    "002",
    "213",
    "345/3",
    "001",
    "18",
    "59",
    "CBDS0942661",
    "CBDSO955598",
    "CDS0945319",
    "CBDS04945322",
    "CBDS0945321",
    "CBDS0956040",
    "CBDS0956041",
    "004",
    "CBDS0957328",
    "CBDSO955599",
    "CBDSO9555600",
    "674",
    "599142",
    "CBDS0949680",
    "CBDS0981272",
    "CBDS0981273",
    "SHESHE-0987",
    "CBDS0978009",
    "CBDS0978010",
    "CBDSO985358",
    "OPD/02",
    "CBDS0957358",
    "CBDS0957359",
    "CBDS0957360",
    "CDBS0956361",
    "CBDS0957362",
    "CBDS0957363",
    "CBDS0978011",
    "CBDS0981275",
    "CBDS0981276",
    "CBDS0978012",
    "CBDS0981277",
    "CBDS0981278",
    "CBDS0990998",
    "CBDS0990999",
    "CBDS0991000",
    "CBDS0991001",
    "CBDS0991003",
    "CBDS0991004",
    "CBDS0991005",
    "CBDS0991006",
    "CBDS0991007",
    "CBDS0978013",
    "OPD 380",
    "CBDS0981282",
    "CBDS0981281",
    "CBDS0981280",
    "CBDS0978016",
    "CBDS0985843",
    "CBDS0981285",
    "CBDS0981284",
    "CBDS0981283",
    "CBDSO994546",
    "CBDS0978018",
    "CBDS0978019",
    "CBDS0978020",
    "CBDS0978022",
    "CBDS0978023",
    "CBDS0978024",
    "CBDS0978025",
    "CBDS0978026",
    "CBDS0978027",
    "CBDS0978028",
    "CBDS0978029",
    "CBDS0978030",
    "CBDS0978031",
    "CBDS0978032",
    "CBDS0978033",
    "CBDS0978034",
    "CBDS0978035",
    "CBDS0978036",
    "CBDS0978037",
    "CBDS0978038",
    "CBDS0978040",
    "CBDS0978039",
    "CBDS0978042",
    "CBDS0978052",
    "CBDS0978051",
    "CBDS0978050",
    "CBDS097809",
    "CBDS0978048",
    "CBDS0978047",
    "CBDS0978046",
    "CBDS0978045",
    "CBDS0978044",
    "CBDS0978021",
    "CBDS1009277",
    "25",
    "CBDS1013512",
    "026",
    "CBDS1014179",
    "CBD-S0997826",
    "CBDS1015189",
    "293",
    "CBDS1015077",
    "440",
    "non",
    "CPDS1020839",
    "CBDS1021938",
    "CBDS1024233",
    "CBDS1024235",
    "CBDS1028269",
    "UGA-NPR-NPR-24-1199",
    "UGA-NPR-NPR-24-1200",
    "UGA-NPR-NPR-24-1201",
    "UGA-NPR-NPR-24-1457",
    "UGA-NPR-NPR-24-1199 1459",
    "UGA-NPR-NPR-24-1458",
    "true",
    "CBDS1032025",
    "245",
    "246",
    "247",
    "249",
    "250",
    "251",
    "252",
    "M/001/08/24",
    "003",
    "unknown",
    "CBDS1028305",
    "CBDS1028309",
    "CBDS1028310",
    "CBDS1046015",
    "CBDS1046016",
    "CBDS1046017",
    "CBDS1046018",
    "CBDS1046019",
    "CBDSI048213",
    "MEASLES 01",
    "CBDS1021941",
    "CBDS1021942",
    "CBDS1021940",
    "CBDS1021943",
    "CBDS1021944",
    "262",
    "CBS1057018",
    "UGA-MSD-MSD-23-0878",
    "CBDS1046021",
    "CBDS1046022",
    "CBDS1039375",
    "CBDS1039376",
    "CBDS1039377",
    "CBDS1063798",
    "CBDS1064084",
    "CBDS1064206",
    "CBDS1021945",
];

const deleteTrackedEntities = async (
    trackedEntityType: string,
    searchAttribute: string,
    searchValues: string[],
) => {
    for (const currentSearch of _.chunk(searchValues, 50)) {
        const {
            data: { instances },
        } = await api.get<{
            instances: Array<{
                trackedEntity: string;
            }>;
        }>("tracker/trackedEntities.json", {
            params: {
                trackedEntityType,
                skipPaging: true,
                filter: `${searchAttribute}:in:${currentSearch.join(";")}`,
                ouMode: "ALL",
            },
        });
        if (instances.length > 0) {
            const { data } = await api.post(
                "tracker",
                { trackedEntities: instances },
                {
                    params: {
                        async: false,
                        reportMode: "FULL",
                        importStrategy: "DELETE",
                    },
                },
            );
            console.log(data);
        }
    }
};

deleteTrackedEntities("MCPQUTHX1Ze", "a1asiVlyTbc", toDelete).then(() =>
    console.log("done"),
);
